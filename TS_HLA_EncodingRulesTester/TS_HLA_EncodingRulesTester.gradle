buildscript {
    repositories {
		mavenLocal()
		mavenCentral()
	}
  dependencies {
	classpath libraries.docker
  }
}

// apply plugin: "com.bmuschko.docker-remote-api"
apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin

// Import task types
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

// Use task types
task dockerBuildImage(type: DockerBuildImage) {
    dependsOn 'install'
    inputDir = file('.')
    buildArgs.put('version', "${TS_HLA_BaseVersion}")
    tags.add("ivct/ts-hla-encoding-rules:${TS_HLA_BaseVersion}")
}

apply plugin: 'application'

mainClassName = 'de.fraunhofer.iosb.testrunner.JMSTestRunner'

dependencies {
	compileOnly     group: 'io.github.msg134', name: 'IEEE1516e', version: ivctVersion

	compileOnly     libraries.tc_lib
	compileOnly     libraries.slf4j_api
	compileOnly		libraries.logback_classic
	compileOnly		libraries.logback_core
	compileOnly     libraries.slf4j_jcl_over_slf4j
	compileOnly     libraries.slf4j_jul_to_slf4j
	compileOnly     libraries.slf4j_log4j_over_slf4j
	compileOnly     libraries.jsonSimple

	testImplementation     group: 'io.github.msg134', name: 'IEEE1516e', version: ivctVersion

	testImplementation     libraries.tc_lib

	testCompileOnly     libraries.slf4j_api
	testCompileOnly		libraries.logback_classic
	testCompileOnly		libraries.logback_core
	testCompileOnly     libraries.slf4j_jcl_over_slf4j
	testCompileOnly     libraries.slf4j_jul_to_slf4j
	testCompileOnly     libraries.slf4j_log4j_over_slf4j
    testCompileOnly(
            'junit:junit:4.12'
    )
    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.1.0'
    )
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.1.0',
            'org.junit.vintage:junit-vintage-engine:5.1.0'
    )
}

// test {
//     useJUnitPlatform()
// }
