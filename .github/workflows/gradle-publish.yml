# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Build and Publish Docker Images

on:
  push:
    branches: 
      - development
      - master

  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Read HLA Version tag
      run: |
        VERSION=$(grep "TS_HLA_BaseVersion" ./.shared/libraries.gradle | awk '{print $3}' | tr -d \')
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Building version ${VERSION}"
    
    - name: Build with Gradle
      run: |
        echo "Building version ${VERSION}"
        ./gradlew dockerBuildImage
    
    - name: Tag docker images
      run: |
        echo "Building version ${VERSION} for branch ${GITHUB_REF:11}"

        docker tag ivct/ts-hla-encoding-rules:${VERSION} ivct/ts-hla-encoding-rules:${GITHUB_REF:11}-latest
        docker tag ivct/ts-hla-cs-verification:${VERSION} ivct/ts-hla-cs-verification:${GITHUB_REF:11}-latest
        docker tag ivct/ts-hla-declaration:${VERSION} ivct/ts-hla-declaration:${GITHUB_REF:11}-latest
        docker tag ivct/ts-hla-object:${VERSION} ivct/ts-hla-object:${GITHUB_REF:11}-latest
        docker tag ivct/ts-hla-services:${VERSION} ivct/ts-hla-services:${GITHUB_REF:11}-latest
    
    - name: Log into DockerHub
      run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    
    - name: Push images to DockerHub
      run: |
        # tag and push test suite image
        docker push ivct/ts-hla-encoding-rules:$VERSION 
        docker push ivct/ts-hla-cs-verification:$VERSION 
        docker push ivct/ts-hla-declaration:$VERSION 
        docker push ivct/ts-hla-object:$VERSION 
        docker push ivct/ts-hla-services:$VERSION 
